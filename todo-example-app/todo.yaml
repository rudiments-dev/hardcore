openapi: "3.0.0"
info:
  version: "0.1"
  title: ToDo example
servers:
  - url: http://localhost:8080/todo
paths:
  /:
    get:
      summary: List all items
      operationId: FindAll[Item]
      responses:
        200:
          description: list of todo items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an item
      operationId: Create[Item]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  required: true
                done:
                  type: boolean
                  default: false
                comment:
                  type: string
      responses:
        201:
          description: Item crated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{itemId}:
    parameters:
      - name: itemId
        in: path
        required: true
        description: The id of the item to retrieve
        schema:
          type: number
          format: int64

    get:
      summary: Details of item
      operationId: Find[Item]
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update the item
      operationId: Update[Item]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - name
                - done
              properties:
                id:
                  type: number
                  format: int64
                name:
                  type: string
                done:
                  type: boolean
                comment:
                  type: string
      responses:
        200:
          description: Item updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete the item
      operationId: Delete[Item]
      responses:
        204:
          description: Item deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /{itemId}/done:
    post:
      summary: Mark item as done
      operationId: Done[Item]
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to mark
          schema:
            type: number
            format: int64
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        409:
          description: Conflict, if done already true
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /{itemId}/undone:
    post:
      summary: Mark item as undone
      operationId: Undone[Item]
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to mark
          schema:
            type: number
            format: int64
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        409:
          description: Conflict, if done already false
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
        - done
      properties:
        id:
          type: number
          format: int64
        name:
          type: string
        done:
          type: boolean
        comment:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string