import com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.palantir.docker'
apply plugin: 'docker-compose'

dependencies {
    compile project(':implementation')
    compile 'com.h2database:h2:1.4.199'
    compile 'ch.qos.logback:logback-classic:1.2.3'
}

shadowJar {
    classifier = null
    version = null
    baseName = 'todo-app'

    transform(AppendingTransformer) {
        resource = 'reference.conf'
    }
    with jar
    destinationDir = file("build/docker")
}

docker {
    dependsOn shadowJar
    name "rudimentsdev/todo-app:latest"
    dockerfile file('Dockerfile')
}

dockerCompose {
    dependsOn docker
    useComposeFiles = ['../docker-compose.yml']
}

task runTodo(type: JavaExec, dependsOn: classes) {
    classpath sourceSets.main.runtimeClasspath
    main = 'dev.rudiments.example.TodoApp'
    standardInput = System.in
}

jar {
    manifest {
        attributes(
            'Main-Class': 'dev.rudiments.example.TodoApp'
        )
    }
}