openapi: "3.0.0"
info:
  version: "0.1"
  title: Type registry API
servers:
  - url: http://localhost:8080/types
paths:
  /:
    get:
      summary: List all Things
      operationId: FindAll[Thing]
      responses:
        200:
          description: List of All Things
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnyThing'
    put:
      summary: Reconsile to incoming state
      operationId: Reconsile[Thing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyThing'
      responses:
        200:
          description: Reconsiled
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnyThing'

  /{name}:
    parameters:
      - name: name
        in: path
        required: true
        description: The name of the Thing to retrieve
        schema:
          type: string

    get:
      summary: Retrieve Thing
      operationId: Find[Thing]
      responses:
        200:
          description: Get Thing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyThing'

    post:
      summary: Create a Thing
      operationId: Create[Thing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyThing'
      responses:
        201:
          description: Item crated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyThing'

    put:
      summary: Update the Thing
      operationId: Update[Thing]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyThing'
      responses:
        200:
          description: Thing updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnyThing'

    delete:
      summary: Delete the Thing
      operationId: Delete[Thing]
      responses:
        204:
          description: Thing deleted

components:
  schemas:
    ThingRef:
      type: object
      properties:
        name:
          type: string
          required: true

    Thing:
      allOf:
        - $ref: '#/components/schemas/ThingRef'
        - type: object
          properties:
            ascendants:
              type: array
              required: true
              default: []
              items:
                $ref: '#/components/schemas/ThingRef'

    AnyThing:
      oneOf:
        - $ref: '#/components/schemas/Abstract'
        - $ref: '#/components/schemas/Type'
        - $ref: '#/components/schemas/OnlyOne'
      discriminator:
        propertyName: type
        mapping:
          Abstract: '#/components/schemas/Abstract'
          Type: '#/components/schemas/Type'
          OnlyOne: '#/components/schemas/OnlyOne'

    Abstract:
      allOf:
        - $ref: '#/components/schemas/Thing'

    Type:
      allOf:
        - $ref: '#/components/schemas/Thing'
        - type: object
          properties:
            fields:
              type: array
              items:
                $ref: '#/components/schemas/Field'

    OnlyOne:
      allOf:
        - $ref: '#/components/schemas/Thing'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Instance'

    Field:
      type: object
      required:
        - name
        - type
        - isRequired
        - default
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AnyThing'
        isRequired:
          type: boolean
          default: true
        default:
          $ref: '#/components/schemas/Instance'

    Instance:
      type: object
      required:
        - fields
        - type
      properties:
        fields:
          description: Fields of a Type as free-form object
          type: object
          additionalProperties: true
        type:
          $ref: '#/components/schemas/Type'

