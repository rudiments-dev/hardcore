parameters:
  - name: release
    default: false
    type: boolean

variables:
  - group: rudiments-sonatype
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: isDevelop
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  - name: triggeredByTag
    value: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/')]

pr:
  - master
  - develop

trigger:
  branches:
    include:
      - master
      - develop
  tags:
    include:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: publish_unit_testing_report
    displayName: 'Publish unit testing report for branch develop'
    condition: eq('${{ parameters.release }}', false)
    steps:
      - task: Gradle@2
        name: gradlew
        displayName: 'Run unit tests and publish report'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'build test aggregateScoverage'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: 'Unit tests report for develop'
      - script: |
           bash <(curl -s https://codecov.io/bash)
        displayName: 'Publish code coverage report to codecov.io'

  - job: push_snapshots
    displayName: 'Push latest Rudiments snapshots to Maven Snapshots repo'
    condition: eq(variables.isDevelop, true)
    steps:
      - script: |
          ./gradlew test uploadArchives -PnexusUsername=$SONATYPE_USERNAME -PnexusPassword=$SONATYPE_PASSWORD
        displayName: 'Push latest Rudiments snapshots to Maven Snapshots repo'
        env:
          SONATYPE_USERNAME: $(SONATYPE_USERNAME)
          SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)

  - job: push_tagged_jars
    displayName: 'Push tagged Rudiments jars to Maven Snapshots repo'
    condition: eq(variables.triggeredByTag, true)
    steps:
      - script: |
          ./gradlew uploadArchives -Ptagged-build -PnexusUsername=$SONATYPE_USERNAME -PnexusPassword=$SONATYPE_PASSWORD
        displayName: 'Push tagged Rudiments jars to Maven Snapshots repo'
        env:
          SONATYPE_USERNAME: $(SONATYPE_USERNAME)
          SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)

  - job: release
    displayName: 'Release Rudiments to Maven Central'
    condition: and(eq('${{ parameters.release }}', true), eq(variables.isMaster, true))
    steps:
      - task: DownloadSecureFile@1
        name: secretkeys
        displayName: 'Download gpg secret keys'
        inputs:
          secureFile: 'secret-keys.gpg'
      - script: |
          ./gradlew uploadArchives -PnexusUsername=$SONATYPE_USERNAME -PnexusPassword=$SONATYPE_PASSWORD -Psigning.keyId=$GPG_KEY_ID -Psigning.password=$GPG_PASSPHRASE -Psigning.secretKeyRingFile=$(secretkeys.secureFilePath)
        displayName: 'Release Rudiments to Maven Central'
        env:
          SONATYPE_USERNAME: $(SONATYPE_USERNAME)
          SONATYPE_PASSWORD: $(SONATYPE_PASSWORD)
          GPG_KEY_ID: $(GPG_KEY_ID)
          GPG_PASSPHRASE: $(GPG_PASSPHRASE)
